<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/lang
        https://www.springframework.org/schema/lang/spring-lang.xsd">
    <!--把创建的对象交给容器统一管理-->
    <bean id="accountDaoImpl" class="com.gsau.dao.impl.AccountDaoImpl"></bean>
    <bean id="accountServiceImpl" class="com.gsau.service.impl.AccountServiceImpl"></bean>
    <!--在默认情况下：它会根据默认无参构造函数来创建类对象。如果 bean 中没有默认无参构造函数，将会创建失败。-->
    <bean id="person" class="com.gsau.entity.Person"></bean>
    <!--此种方式是:：spring 管理静态工厂-使用静态工厂的方法创建对象
         使用 SpringBeanFactory 类中的静态方法 instanceBean 创建对象，并存入 spring 容器
         id 属性：指定 bean 的 id，用于从容器中获取
         class 属性：指定静态工厂的全限定类名
         factory-method 属性：指定生产对象的静态方法-->
    <bean id="emp" class="com.gsau.factory.SpringBeanFactory" factory-method="instanceBean"></bean>
    <!-- 此种方式是： spring 管理实例工厂-使用实例工厂的方法创建对象
            先把工厂的创建交给 spring 来管理。
            然后在使用工厂的 bean 来调用里面的方法
            factory-bean 属性：用于指定实例工厂 bean 的 id。
            factory-method 属性：用于指定实例工厂中创建对象的方法。
    -->
    <bean id="springBeanFactory" class="com.gsau.factory.SpringBeanFactory"></bean>
    <bean id="dept" factory-bean="springBeanFactory" factory-method="createBean"></bean>
    <!--依赖注入：使用构造函数的方式-->
    <bean id="now" class="java.util.Date"></bean>
    <bean id="constructInjectionImpl" class="com.gsau.service.impl.ConstructInjectionImpl" >
        <!--构造函数注入标签：
                type:用于指定要注入的数据的数据类型
                index:指定要注入的数据给构造函数中指定索引位置的参数赋值
                name:指定参数在构造函数中的名称
                value:它能赋的值是基本数据类型和 String 类型
                ref:它能赋的值是其他 bean 类型，也就是说，必须得是在配置文件中配置过的 bean
        -->
        <constructor-arg type="java.lang.String" value="类型1" index="0"></constructor-arg>
        <constructor-arg type="java.lang.Integer" value="12"    index="1"></constructor-arg>
        <constructor-arg type="java.util.Date" ref="now"    index="2"></constructor-arg>
    </bean>
    <!-- 通过配置文件给 bean 中的属性传值：使用 set 方法的方式
            涉及的标签：
            property属性：
                name：找的是类中 set 方法后面的部分
                ref：给属性赋值是其他 bean 类型的
                value：给属性赋值是基本数据类型和 string 类型的
            实际开发中，此种方式用的较多。
     -->
    <bean id="setMethodInjectionImpl" class="com.gsau.service.impl.SetMethodInjectionImpl">
        <property name="name" value="test"></property>
        <property name="age" value="21"></property>
        <property name="birth" ref="now"></property>
    </bean>
</beans>